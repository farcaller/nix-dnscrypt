name: CI

on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3.0.8
        id: nix-cache
        with:
          path: /tmp/nixcache
          key: ${{ runner.os }}-nix-cache

      - uses: cachix/install-nix-action@v15
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - if: "steps.nix-cache.outputs.cache-hit == 'true'"
        run: "nix-store --import < /tmp/nixcache"

      - run: nix build .#dockerImage -o result

      - run: cat result > image.gz

      - if: "steps.nix-cache.outputs.cache-hit != 'true'"
        run: "nix-store --export $(find /nix/store -maxdepth 1 -name '*-*') > /tmp/nixcache"

      - id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: "${{ github.repository_owner }}"
          DOCKER_PASSWORD: "${{ secrets.GITHUB_TOKEN }}"
          DOCKER_REGISTRY_URL: ghcr.io

      - uses: actions-hub/docker@master
        with:
          args: load < /github/workspace/image.gz

      - uses: actions-hub/docker@master
        with:
          args: tag dnscrypt:latest ghcr.io/farcaller/dnscrypt-proxy:${{ steps.vars.outputs.sha_short }}

      - uses: actions-hub/docker@master
        with:
          args: push ghcr.io/farcaller/dnscrypt-proxy:${{ steps.vars.outputs.sha_short }}
